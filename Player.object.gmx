<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>PlayerSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (audio_is_playing(sound0)){audio_play_sound(sound1,0,false);}
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_left=(keyboard_check(ord("A"))||keyboard_check(vk_left));
move_right=(keyboard_check(ord("D"))||keyboard_check(vk_right));
move_down=(keyboard_check(ord("S"))||keyboard_check(vk_down));
move_up=(keyboard_check(ord("W"))||keyboard_check(vk_up));
if (room!=room_first){global.time+=1/60;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(vk_shift)){SPEED=1.2;}
else {SPEED=2;}
move_horizontal=move_right-move_left;
move_vertical=move_down-move_up;
if (abs(move_horizontal)+abs(move_vertical)=2){
move_horizontal/=sqrt(2);
move_vertical/=sqrt(2);
}
move_horizontal*=SPEED;
move_vertical*=SPEED;
hspeed+=move_horizontal;
vspeed+=move_vertical;
if (speed&gt;SPEED/2){speed-=SPEED/2;}
else speed=0;
if (speed&gt;SPEED){speed=SPEED;}
//now wall interactions
if (place_meeting(x+hspeed,y+vspeed,HWall)){
inst=instance_place(x+hspeed,y+vspeed,HWall);
if (inst.y=y){
y+=choose(-1,1);
}
y=inst.y-vspeed-(4*sign(inst.y-y));
}
if (place_meeting(x+hspeed,y+vspeed,VWall)){
inst=instance_place(x+hspeed,y+vspeed,VWall);
if (inst.x=x){
x+=choose(-1,1);
}
x=inst.x-hspeed-(4*sign(inst.x-x));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imagex=round(x);
imagey=round(y);
//if (color_get_red(draw_getpixel(imagex,imagey))&gt;128||color_get_red(draw_getpixel(imagex-1,imagey-1))&gt;128||color_get_red(draw_getpixel(imagex,imagey-1))&gt;128||color_get_red(draw_getpixel(imagex-1,imagey))&gt;128){instance_destroy();}
if (color_get_value(draw_getpixel(imagex,imagey))&gt;128||color_get_value(draw_getpixel(imagex-1,imagey-1))&gt;128||color_get_value(draw_getpixel(imagex,imagey-1))&gt;128||color_get_value(draw_getpixel(imagex-1,imagey))&gt;128){instance_destroy();}
draw_set_blend_mode(bm_add);
draw_set_circle_precision(12);
draw_set_alpha(1/3);
draw_circle(imagex,imagey,3,false);
draw_set_alpha(2/3);
draw_circle(imagex,imagey,2,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
